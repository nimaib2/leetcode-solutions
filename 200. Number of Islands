class Solution {
    public int numIslands(char[][] grid) {
        if(grid==null || grid.length==0){
            return 0;
        }
        int islands = 0;
        int m=grid.length;
        int n=grid[0].length;
        Queue<int[]> q = new LinkedList<>();
        int[][] dirs = {{-1,0}, {1, 0}, {0, -1}, {0, 1}};
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(grid[i][j]=='1'){
                    islands++;
                    q.add(new int[]{i, j});
                    grid[i][j]='2';
                    while(!q.isEmpty()){
                        int[] coords = q.poll();
                        for(int[] dir:dirs){
                            int nr=coords[0]+dir[0];
                            int nc = coords[1]+dir[1];
                            if(nc>=0 && nc<n && nr>=0 && nr<m && grid[nr][nc]=='1'){
                                grid[nr][nc]='2';
                                q.add(new int[]{nr, nc});
                            }
                        }
                    }
                }
            }
        }
        return islands;
    }
}
