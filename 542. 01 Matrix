class Solution {
    public int[][] updateMatrix(int[][] mat) {
        if(mat==null||mat.length==0){
            return mat;
        }
        int m=mat.length;
        int n=mat[0].length;
        Queue<int[]> q = new LinkedList<>();
        int[][] dirs = {{-1,0}, {1, 0}, {0, -1}, {0, 1}};
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(mat[i][j]==1){
                    mat[i][j]=-1;
                } else {
                    q.add(new int[] {i, j});
                }
            }
        }

        int lvl=0;
        while(!q.isEmpty()){
            int size=q.size();
            for(int i=0; i<size; i++){
                int[] coords = q.poll();
                for(int[] dir:dirs){
                    int nr=dir[0]+coords[0];
                    int nc=dir[1]+coords[1];
                    if(nr>=0 && nr<m && nc>=0 && nc<n && mat[nr][nc]==-1){
                        mat[nr][nc]=lvl+1;
                        q.add(new int[] {nr, nc});
                    }
                }
            }
            lvl++;
        }
        return mat;
    }
}
